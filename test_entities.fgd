//===================== Copyright (c) Valve Corporation. All Rights Reserved. ======================
//
// Defines entity classes needed only for test maps.
//
//==================================================================================================


@PointClass base( prop_dynamic_base ) model() = devtest_hierarchy :
	"Various hierarchy related unit tests - For use in devtest."
[
	model(resource:model) : "World Model"

	testMode(choices) : "Test Mode" : 0 =
	[
		0: "None"
		1: "Attach and Detach From Parent"
		2: "Cycle attachment type"
		3: "Switch parent"
		4: "Test Child Dormancy"
		5: "Switch model"
		6: "Switch child model"
	]
	childPhysicsMode(choices) : "Child Physics Mode" : 0 =
	[
		0: "Kinematic"
		1: "Dynamic"
	]
	createClientSideChild(boolean) : "Create client-side child entity" : 0 : "If enabled, you must also specify a client-side child model name"
	rotationAxis(vector) : "" : ""
	rotationSpeed(float) : "" : ""
	child(target_destination) : "Child entity" : "" : "This is the entity which will be attached as a child to this entity"
	hierarchyAttachName(string) : "Hierarchy Attach Name" : "" : "This indicates how the child will be attached to the entity. Should be an attachment or bone name, or !absorigin, or !bonemerge. Leaving it empty implies !absorigin"
	dynamicResetCount(integer) : "Dynamic Reset Count" : "" : "Used by 'Dynamic' Child Physics Mode, this indicates the number of times the test should cycle before the child is teleported back to the parent (using the relative offset)"
	dynamicAttachOffset(vector) : "Dynamic Attachment Offset" : "" : "Used by 'Dynamic' childPhysicsMode, this indicates the relative offset the child should be from the attachment point when it teleports back into position"
	alternateAttachName(string) : "Alternate Attachment Name" : "" : "Used by the 'cycle attachment type' test, this should be a bone name on the parent"
	alternateParent(target_destination) : "Alternate Parent" : "" : "Used by the 'Switch parent' test, this should be a different parent to parent the child to"
	alternateModel(resource:model) : "Alternate World Model" : "" : "Used by the 'Switch model' test"
	clientSideChildModel(resource:model) : "Client-side Child Model" : "" : "Used if we are creating a client-side child entity"
]


@PointClass base( prop_dynamic_base ) model() = devtest_hierarchy_child :
	"Various hierarchy related unit tests - For use in devtest."
[
	model(resource:model) : "World Model"
]


@PointClass base( prop_dynamic_base ) editormodel("models/survivors/survivor_gambler") = devtest_hierarchy2 :
	"Various hierarchy related unit tests - For use in devtest."
[
]


